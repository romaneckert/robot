var Interface={timer:null,scene:null,camera:null,renderer:null,cube:null,init:function(){$(document).ready(this.handleDocumentReady.bind(this))},handleDocumentReady:function(){$("body").on("click","a",this.handleButtonClick.bind(this)),this.update()},update:function(){this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.z=5,this.renderer=new THREE.WebGLRenderer,this.renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(this.renderer.domElement);var e=new THREE.BoxGeometry(1,1,1),n=new THREE.MeshBasicMaterial({color:65280});this.cube=new THREE.Mesh(e,n),this.scene.add(this.cube),$.get("/api/data",this.handleUpdateSuccess.bind(this)).fail(this.handleUpdateFail.bind(this))},render:function(){requestAnimationFrame(this.render),this.cube.rotation.x+=.1,this.cube.rotation.y+=.1,this.renderer.render(this.scene,this.camera)},handleUpdateSuccess:function(e){$("#header-nav .navbar-brand span").removeClass("flashing"),$("[data-model]").each(function(n,t){var i=$(t).data("model"),a=$(t).data("attribute");e[i]&&e[i][a]&&$(t).text(e[i][a])}),setTimeout(this.update.bind(this),200)},handleUpdateFail:function(e){$("#header-nav .navbar-brand span").addClass("flashing"),setTimeout(this.update.bind(this),200)},handleButtonClick:function(e){var n=$(e.currentTarget),t=n.data("action");if($("body").append('<div id="loading"><span class="glyphicon glyphicon-repeat spinner"></span></div>'),t)switch(e.preventDefault(),t){case"":default:$.get("/robot/"+t,function(e){$("#content").html(e),$("#loading").remove()}.bind(this)).fail(function(){$("#content").html("error in action "+t),$("#loading").remove()})}}};Interface.init();
//# sourceMappingURL=robot.min.js.map
